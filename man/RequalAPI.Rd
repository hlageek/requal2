% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api.R
\name{RequalAPI}
\alias{RequalAPI}
\title{Requal API}
\description{
An API interface for Requal extensions to interact with qualitative data.
Provides controlled access to documents, codes, coded segments, and other project data
while maintaining data integrity and user permissions.
}
\details{
The API operates in two modes:
\itemize{
\item \strong{Production mode}: Uses the actual database connection from the main app
\item \strong{Development mode}: For \code{NULL} connections, uses a bundled SQLite database for testing purposes
}

All methods follow a consistent pattern:
\itemize{
\item Work within the authenticated user and project context
\item Return all data the user has permissions to access
\item Return dataframes, vectors, or logical values (quiet methods)
\item Return \code{NULL} on errors with warnings (\verb{get_*} methods)
\item Return \code{FALSE} on errors with warnings (\verb{write_*}, \verb{edit_*}, \verb{delete_*} methods)
}
}
\examples{
# Mock usage (for extension development/testing)
api <- requal::RequalAPI$new()
cat("Using API version:", api$version)


## ------------------------------------------------
## Method `RequalAPI$new`
## ------------------------------------------------

api <- requal::RequalAPI$new()
cat("Using API version:", api$version)

## ------------------------------------------------
## Method `RequalAPI$get_segments`
## ------------------------------------------------

api <- requal::RequalAPI$new()
segments <- api$get_segments()  # Gets mock data
head(segments)

## ------------------------------------------------
## Method `RequalAPI$write_document`
## ------------------------------------------------

\dontrun{
api <- RequalAPI$new()
result <- api$write_document(
  doc_name = "Interview_01",
  doc_text = "Full interview transcript...",
  doc_description = "First participant interview"
)
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{version}}{Character. The API version}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{user_id}}{Integer. The authenticated user's ID (read-only)}

\item{\code{project_id}}{Integer. The current project's ID (read-only)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RequalAPI-new}{\code{RequalAPI$new()}}
\item \href{#method-RequalAPI-get_segments}{\code{RequalAPI$get_segments()}}
\item \href{#method-RequalAPI-write_document}{\code{RequalAPI$write_document()}}
\item \href{#method-RequalAPI-clone}{\code{RequalAPI$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RequalAPI-new"></a>}}
\if{latex}{\out{\hypertarget{method-RequalAPI-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new RequalAPI instance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RequalAPI$new(con = NULL, user_id = NULL, project_id = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{con}}{Database connection (pool object). If \code{NULL}, will launch a bundled mock database.}

\item{\code{user_id}}{Integer. The authenticated user's ID (immutable).}

\item{\code{project_id}}{Integer. The current project's ID (immutable).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new instance of RequalAPI R6 class
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{api <- requal::RequalAPI$new()
cat("Using API version:", api$version)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RequalAPI-get_segments"></a>}}
\if{latex}{\out{\hypertarget{method-RequalAPI-get_segments}{}}}
\subsection{Method \code{get_segments()}}{
Get coded segments for the current user and project
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RequalAPI$get_segments()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A dataframe containing segments with associated code information, or NULL on error.
Returns all segments the authenticated user is permitted to see based on their permissions.
Columns include: segment_id, document_id, start_pos, end_pos,
segment_text, code_id, code_name, code_description, user_id, project_id
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{api <- requal::RequalAPI$new()
segments <- api$get_segments()  # Gets mock data
head(segments)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RequalAPI-write_document"></a>}}
\if{latex}{\out{\hypertarget{method-RequalAPI-write_document}{}}}
\subsection{Method \code{write_document()}}{
Add a new document to the current project
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RequalAPI$write_document(doc_name, doc_text, doc_description = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{doc_name}}{Character. Name/title for the document (required).}

\item{\code{doc_text}}{Character. Full text content of the document (required).}

\item{\code{doc_description}}{Character. Optional description of the document.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Result from the document creation operation, or NULL on error.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
api <- RequalAPI$new()
result <- api$write_document(
  doc_name = "Interview_01",
  doc_text = "Full interview transcript...",
  doc_description = "First participant interview"
)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RequalAPI-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RequalAPI-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RequalAPI$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
